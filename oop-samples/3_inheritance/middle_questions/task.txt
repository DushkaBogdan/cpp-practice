Create a hierarchy of classes that describe different types of questions in questionnaires:
• an abstract class representing all survey questions (SurveyQuestion), consisting of:
o the text of the question;
o a purely virtual getAnswersCount method for determining the number of answer options;
o a purely virtual getAnswer method for extracting the text of the answer option by number;
o a purely virtual accept method that accepts some abstract visitor object (SurveyQuestionVisitor)
• a derived class that represents the usual form of a question with ready-made answer options stored explicitly (ChoiceQuestion):
o stores a vector of strings, each of which contains one of the answer options;
o implements the virtual methods of the abstract class by accessing the vector of response strings;
• a derived class representing a question with standard answer options - Yes and No (YesNoQuestion):
o does not store any additional variables;
o the number of answer options is always 2;
o the method of extracting the text of a variant is implemented by choosing from a pair of “Yes” and “No”;
• a derived class representing a question with a ranking (for example, scores from 1 to 5) in a given range (RangeQuestion):
o stores the start and end numeric value, as well as the step;
o the number of answer options is determined by the number of possible values ​​in the specified interval at the selected step;
o the response text is determined by the numeric value at the step corresponding to the response number;

Also create a visitor class hierarchy for the question hierarchy:
• interface for an abstract visitor (SurveyQuestionVisitor);
• a visitor that saves a set of questions to a disk file in binary format (SurveyQuestionBinarySerializationVisitor);
• a visitor that prints a text listing of questions and their corresponding answer options to a specified disk text file (SurveyQuestionTextDumpVisitor).

Develop a console program using the given hierarchy:
• create several question objects of different types;
• save this set of questions to a binary file using the appropriate visitor class;
• print a text listing to a disk file using the appropriate visitor class;
• make sure the text listing matches the original question/answer structure;
• correctly destroy all created objects.

When implemented, it is strictly forbidden to apply a transformation down the inheritance hierarchy (downcast)!
