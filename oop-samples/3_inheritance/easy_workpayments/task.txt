Создайте иерархию классов, моделирующих информацию о способах оплаты труда сотрудников:
	•	абстрактный класс, представляющий сотрудников (Employee):
		o	уникальное имя;
		o	начисленная сумма премиальных;
		o	чисто виртуальный метод doWork, регистрирующий факт выполнения работы, длительность которой в часах передается в качестве аргумента;
		o	чисто виртуальный метод calculatePayment, возвращающий сумму компенсации за выполненную работу + премиальные;
		o	метод для добавления премиальных за удачную работу;
	•	производный класс, представляющий собой сотрудника с почасовой оплатой труда (HourlyEmployee):
		o	характеризуется почасовой ставкой оплаты труда;
		o	содержит счетчик отработанных часов;
		o	реализует метод doWork сообщением о выполнении работы на консоли и накоплением количества отработанных часов в счетчике;
		o	реализует метод calculatePayment умножением общего числа отработанных часов на почасовую ставку оплаты + премиальные;
	•	производный класс, представляющий собой сотрудника с оплатой труда по фиксированной зарплатной ставке (SalaryEmployee):
		o	характеризуется фиксированной зарплатной ставкой;
		o	реализует метод doWork сообщением о выполнении работы на консоли;
		o	реализует метод calculatePayment возвратом фиксированной зарплатной ставки + премиальные;
	•	производный класс, представляющий сотрудника-стажера без оплаты (InternEmployee):
		o	характеризуется фиксированным лимитом часов загрузки;
		o	реализует метод doWork сообщением о выполнении работы на консоли, если загрузка не превышает установленный лимит;
		o	реализует метод calculatePayment возвратом объема премиальных.

Имена сотрудников в модели должны быть уникальными.

Реализуйте управляющий класс Controller, в обязанности которого входит:
	•	хранение и уничтожение всех объектов модели;
	•	метод createHourlyEmployee, добавляющий в модель нового сотрудника-почасовика;
	•	метод createSalaryEmployee, добавляющий в модель нового сотрудника с фиксированной ставкой зарплаты;
	•	метод createInternEmployee, добавляющий в модель нового сотрудника-стажера;
	•	метод trackWork, регистрирующий факт выполнения сотрудником работы с указанной длительностью в часах;
	•	метод giveBonus, назначающий указанному сотруднику некоторый объем премиальных;
	•	метод getPayment, возвращающий накопленный объем оплаты указанному сотруднику;
	•	метод getTotalPayment, возвращающий общий накопленній объем оплаты для всех зарегистрированных сотрудников.

Controller должен генерировать подходящие к ситуациям исключения.
