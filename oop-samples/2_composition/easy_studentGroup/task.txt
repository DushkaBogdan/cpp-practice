Create a simple class hierarchy that models information about a group of students:

• class Student (student):
o Record book number.
o Full name.
o Date of birth (it is recommended to use a ready-made class from lectures).
o Form of study: budget or contract (via enum).

• class AcademicGroup (group):
o Group name.
o List of group students.
o Head of the group (captain).

Handle the simplest kinds of errors that can occur in a model by throwing exceptions:
• string parameters (names, titles) cannot be empty;
• the student's date of birth must not be later than the current date;
• in the model there should not be two students with the same record book number;
• there should not be two groups with the same names in the model;
• the head of the group must study in this group.

Modify the attached test control console program (Application class) that creates and uses this model:
• independently create an arbitrary set of hierarchy objects sufficient to test the functionality and demonstrate the implementation - generateTestModel;
• print the number of students enrolled in the budget form - printBudgetStudentsCount;
• print out the number of students enrolled in the contract form - printContractStudentsCount;
• print pairs “group last name” for all students born on the 1st day of any month - printStudentsBornFirstDayOfMonth;
• print out all data of the oldest student from all groups - printEldestStudent;
• correctly destroy all created objects in the destructor.
