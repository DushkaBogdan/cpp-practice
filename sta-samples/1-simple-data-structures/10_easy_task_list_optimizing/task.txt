1. The user enters into the program through the console a sequence of positive integers,
terminating the input with zero or a negative number. The user then enters the number X. If the number X is greater than
or equal to the current first element of the sequence in memory, nothing happens.
If the number X is less, the first element of the sequence is removed from memory. Regardless of the value of X,
the program outputs the current state of the stored sequence at each step.
The process of entering the number X and possibly changing the sequence is repeated until
until the sequence in memory is empty.

           Input example:
       1 2 3 4 5 0
       5<Enter>
       0<Enter>
       1<Enter>
       0<Enter>
       1<Enter>
       0<Enter>

           Sample output:
       1 2 3 4 5
       2 3 4 5
       3 4 5
       4 5
       five

2. Complete the implementation of singly linked lists with the following operations:
o The operation of calculating the sum of elements:

     int IntegerListAccumulate ( const IntegerList & _list );

o Operation to check if the list is sorted in ascending order:

     bool IntegerListIsSorted ( const IntegerList & _list );

o The operation of splitting a list into two lists by the specified element
(all elements to the left, not including the specified one, fall into the first list separating the element and all subsequent ones into the second list):

           void IntegerListSplice( IntegerList & _sourceList,
                               IntegerList::Node * _pSplitNode,
                               IntegerList & _targetList1,
                               IntegerList & _targetList2);
